name: GopherCoders_Build_And_Deploy
on: [push, pull_request]
jobs:
  deploy:
    name: "Deploy to gophercoder"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4      # the repo will be checked out to ~/work/website/website - subsequent commands run inside this directory. This is the GITHUB_WORKSPACE env var value

      - name: Listing
        run: |
          ls -al

      - name: Download and install hugo
        run: |
          RELEASE=`curl  "https://api.github.com/repos/gohugoio/hugo/tags" | jq -r '.[0].name'`
          echo $RELEASE   
          RELEASENOV="${RELEASE:1}"
          echo $RELEASENOV 
          curl -L "https://github.com/gohugoio/hugo/releases/download/${RELEASE}/hugo_${RELEASENOV}_linux-amd64.deb" --output ./hugo_${RELEASENOV}_linux-amd64.deb
          sudo apt-get install ./hugo_${RELEASENOV}_linux-amd64.deb

      - name: Build Website
        run: |
          pwd
          ls -l ~/
          hugo
          ls -l ./public

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/gophercoders.key
          chmod 600 ~/.ssh/gophercoders.key
          cat >>~/.ssh/config <<END
          Host gophercoders.com
            HostName $SSH_HOST
            User $SSH_USER
            Port $SSH_PORT
            IdentityFile ~/.ssh/gophercoders.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.GOPHERCODERS_SERVER_SSH_KEY }}
          SSH_USER: ${{ secrets.GOPHERCODERS_SERVER_USERNAME }}
          SSH_HOST: ${{ secrets.GOPHERCODERS_SERVER_HOSTNAME }}
          SSH_PORT: ${{ secrets.GOPHERCODERS_SERVER_PORT }}

      - name: Delete gophercoders.com on remote
        run: ssh gophercoders.com 'rm -rf ~/gophercoders.com'
        
      - name: Make gophercoders.com on the remote
        run: ssh gophercoders.com 'mkdir ~/gophercoders.com'

      - name: Copy website pages and assets
        run: scp -r ./public/* gophercoders.com:~/gophercoders.com/

      - name: Stop nginx
        run: ssh gophercoders.com 'sudo /usr/bin/systemctl stop nginx.service'

      - name: Copy website pages and assets to /var//www/gophercoders.com on remote
        run: ssh gophercoders.com 'sudo /usr/bin/cp -r ~/gophercoders.com/* /var/www/gophercoders.com/'

      - name: Restart nginx
        if: ${{ always() }}
        run: ssh gophercoders.com 'sudo /usr/bin/systemctl restart nginx.service'

      - name: Delete ssh dir
        if: ${{ always() }}
        run: |
          rm -rf ~/.ssh
